{
    "version": "20220603",
    "description": "A software distro and building platform for Windows",
    "homepage": "https://www.msys2.org",
    "license": "GPL-2.0-only|BSD-3-Clause",
    "architecture": {
        "64bit": {
            "url": "https://mirrors.tuna.tsinghua.edu.cn/msys2/distrib/x86_64/msys2-base-x86_64-20220603.tar.xz",
            "hash": "7a94529d2e88614424212897c963244733de758185cb615c7bb3efbad55190da",
            "extract_dir": "msys64"
        }
    },
    "installer": {
        "script": [
            "# Disable pacman key refreshing to speed up setup: https://github.com/msys2/setup-msys2/issues/45",
            "$postScript = \"$dir\\etc\\post-install\\07-pacman-key.post\"",
            "(Get-Content $postScript) -replace ' --refresh-keys', ' --version' | Set-Content $postScript",
            "# MSYS2 Bootstrap (First Run)",
            "Write-Host 'Invoking MSYS2 First Run...' -ForegroundColor Yellow",
            "$baseArgs = \"ps -ef | grep '[?]' | awk '{print `$2}' | xargs -r kill\"",
            "$args = \"`\"$baseArgs`\"\"",
            "Invoke-ExternalCommand -Path \"$dir\\msys2_shell.cmd\" -ArgumentList \"-msys2 -defterm -here -no-start -c $args\" | Out-Null",
            "Write-Host 'Updating MSYS2 core...' -ForegroundColor Yellow",
            "function Ensure-Mirror {",
            "    $pacmanConf = \"$dir\\etc\\pacman.conf\"",
            "    # We edit pacman.conf directly, since pacman-mirrors sucks: https://github.com/msys2/MSYS2-packages/issues/1907#issuecomment-716615697",
            "    (Get-Content $pacmanConf) -replace 'Include = /etc/pacman.d/mirrorlist.msys', 'Server = https://mirrors.tuna.tsinghua.edu.cn/msys2/msys/$arch/' | Set-Content $pacmanConf",
            "    (Get-Content $pacmanConf) -replace 'Include = /etc/pacman.d/mirrorlist.mingw', 'Server = https://mirrors.tuna.tsinghua.edu.cn/msys2/mingw/$repo/' | Set-Content $pacmanConf",
            "}",
            "function Update-MSys2 {",
            "    Write-Host 'Ensure pacman mirrors are used...' -ForegroundColor Yellow",
            "    Ensure-Mirror",
            "    $logPath = \"$dir\\update.log\"",
            "    $stopSentence = 'there is nothing to do'",
            "    $cntSentence = 2",
            "    $args2 = \"`\"pacman --ask 20 --noconfirm -Syuu --disable-download-timeout | tee -a /update.log;$baseArgs`\"\"",
            "    $max = 5",
            "    Write-Output \"Repeating update until there are no more updates or max $max iterations\"",
            "    Write-Output \"Logs are recorded in: $logPath\"",
            "    Remove-Item $logPath -ea 0",
            "    $ErrorActionPreference = 'Continue'",
            "    while (!$done) {",
            "        ++$i",
            "        Invoke-ExternalCommand -Path \"$dir\\msys2_shell.cmd\" -ArgumentList \"-msys2 -defterm -here -no-start -c $args2\" -ContinueExitCodes @{ 1 = 'Pacman exit with code 1 but it does not matter.'} | Out-Null",
            "        $done = (Get-Content $logPath) -match $stopSentence | Measure-Object | ForEach-Object { $_.Count -ge $cntSentence }",
            "        $done = $done -or ($i -ge $max)",
            "    }",
            "}",
            "Update-MSys2",
            "# Detect saved_packages.txt",
            "if (Test-Path \"$persist_dir\\home\\saved_packages.txt\") {",
            "    Write-Host \"To restore installed packages, you need to run 'pacman -S --needed `$(cat /home/saved_packages.txt)' inside MSYS2\" -ForegroundColor DarkCyan",
            "}"
        ]
    },
    "uninstaller": {
        "script": [
            "$baseArgs = \"ps -ef | grep '[?]' | awk '{print `$2}' | xargs -r kill\"",
            "# Stop gpg-agent process",
            "$args = \"`\"gpgconf --kill gpg-agent;$baseArgs`\"\"",
            "Invoke-ExternalCommand -Path \"$dir\\msys2_shell.cmd\" -ArgumentList \"-msys2 -defterm -here -no-start -c $args\" | Out-Null",
            "# Backup installed packages",
            "Write-Host 'Saving MSYS2 installed packages to /home/saved_packages.txt...' -ForegroundColor Yellow",
            "$args2 = \"`\"pacman -Qqe | xargs echo > /home/saved_packages.txt;$baseArgs`\"\"",
            "Invoke-ExternalCommand -Path \"$dir\\msys2_shell.cmd\" -ArgumentList \"-msys2 -defterm -here -no-start -c $args2\" | Out-Null"
        ]
    },
    "bin": [
        [
            "msys2_shell.cmd",
            "msys2",
            "-defterm -here -no-start -msys2"
        ],
        [
            "msys2_shell.cmd",
            "mingw32",
            "-defterm -here -no-start -mingw32"
        ],
        [
            "msys2_shell.cmd",
            "mingw64",
            "-defterm -here -no-start -mingw64"
        ],
        [
            "msys2_shell.cmd",
            "clang64",
            "-defterm -here -no-start -clang64"
        ],
        [
            "msys2_shell.cmd",
            "ucrt64",
            "-defterm -here -no-start -ucrt64"
        ]
    ],
    "shortcuts": [
        [
            "msys2.exe",
            "MSYS2"
        ],
        [
            "mingw32.exe",
            "MinGW32"
        ],
        [
            "mingw64.exe",
            "MinGW64"
        ],
        [
            "clang64.exe",
            "Clang64"
        ],
        [
            "ucrt64.exe",
            "UCRT64"
        ]
    ],
    "persist": "home",
    "checkver": {
        "url": "https://mirrors.tuna.tsinghua.edu.cn/msys2/distrib/x86_64/",
        "re": "msys2-base-x86_64-(\\d+).tar.xz",
        "reverse": true
    },
    "autoupdate": {
        "architecture": {
            "64bit": {
                "url": "https://mirrors.tuna.tsinghua.edu.cn/msys2/distrib/x86_64/msys2-base-x86_64-$version.tar.xz"
            }
        }
    }
}
